<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>zhangchi.io</title><link>https://zhangchi.io/</link><description>.NET Core、Abp框架、领域驱动、设计模式及程序架构等知识分享</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>zliming@outlook.com (张驰)</managingEditor><webMaster>zliming@outlook.com (张驰)</webMaster><lastBuildDate>Thu, 06 Jan 2022 11:22:17 +0800</lastBuildDate><atom:link href="https://zhangchi.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Abp极简教程-6 Entity Framework与仓储实现</title><link>https://zhangchi.io/posts/abp-turorial-6-entity-framework/</link><pubDate>Thu, 06 Jan 2022 11:22:17 +0800</pubDate><author>作者</author><guid>https://zhangchi.io/posts/abp-turorial-6-entity-framework/</guid><description>在前几篇教程中，对领域进行了建模，开发了领域层，针对应用程序用例开发了应用层，还创建了负责数据适配的HttpApi接口。到目前为止，项目还无</description></item><item><title>Abp极简教程-5 Api接口</title><link>https://zhangchi.io/posts/abp-turorial-5-http-api/</link><pubDate>Tue, 04 Jan 2022 10:31:12 +0800</pubDate><author>作者</author><guid>https://zhangchi.io/posts/abp-turorial-5-http-api/</guid><description>HttpApi接口承担着数据转换器的职责，它将应用层的数据传输对象，转换为便于前端使用的json格式，也将前端调用Api时传入的json格式</description></item><item><title>Abp极简教程-4 应用层及应用服务</title><link>https://zhangchi.io/posts/abp-turorial-4-application-service/</link><pubDate>Wed, 29 Dec 2021 13:24:18 +0800</pubDate><author>作者</author><guid>https://zhangchi.io/posts/abp-turorial-4-application-service/</guid><description>上篇文章中，介绍了领域服务，并用领域服务实现了创建Issue的业务逻辑。下面介绍应用服务以及它和领域服务的区别，并在CatchExcepti</description></item><item><title>Abp极简教程-3 领域服务</title><link>https://zhangchi.io/posts/abp-turorial-3-domain-service/</link><pubDate>Tue, 28 Dec 2021 09:41:38 +0800</pubDate><author>作者</author><guid>https://zhangchi.io/posts/abp-turorial-3-domain-service/</guid><description>在上一篇教程中，分析了CatchException项目的业务逻辑，得到了核心域，并对Issue、Answerer聚合建模。这篇文章中将创建领</description></item><item><title>Abp极简教程-1 应用和模块</title><link>https://zhangchi.io/posts/abp-tutorial-1-application-and-module/</link><pubDate>Thu, 23 Dec 2021 04:12:10 +0000</pubDate><author>作者</author><guid>https://zhangchi.io/posts/abp-tutorial-1-application-and-module/</guid><description>Abp是一个基于.NET的开源应用程序框架，它遵循最佳实践和约定，根据DDD模式进行设计和开发，并提供了强大的基础设施和完整的架构。 Abp提</description></item><item><title>在单例服务中解析依赖项</title><link>https://zhangchi.io/posts/resolve-dependencies-in-singleton-service/</link><pubDate>Wed, 22 Dec 2021 06:22:01 +0000</pubDate><author>作者</author><guid>https://zhangchi.io/posts/resolve-dependencies-in-singleton-service/</guid><description>在依赖注入系统中，依赖项的生命周期通常分为瞬时的（Transient）、作用域的（Scoped）、单例的（Singleton）三种。单例生命</description></item><item><title>禁用ASP.NET Core开发环境的HTTPS</title><link>https://zhangchi.io/posts/configure-protocol-and-port/</link><pubDate>Wed, 22 Dec 2021 04:33:11 +0000</pubDate><author>作者</author><guid>https://zhangchi.io/posts/configure-protocol-and-port/</guid><description>在开发ASP.NET Core的项目时，默认地是使用HTTPS安全协议的。有时候可能不希望在本地的开发环境中使用HTTPS，更改这一默认行为非</description></item><item><title>在Abp中根据ExtraProperties进行查询</title><link>https://zhangchi.io/posts/query-by-extra-properties-in-abp/</link><pubDate>Fri, 17 Dec 2021 08:16:35 +0000</pubDate><author>作者</author><guid>https://zhangchi.io/posts/query-by-extra-properties-in-abp/</guid><description>Abp框架提供了实体扩展系统，允许在不对类的定义进行更改的情况下，向对象中添加额外的属性。默认地，额外属性是以json对象的形式存储在数据库</description></item><item><title>如何在Maui中使用依赖注入</title><link>https://zhangchi.io/posts/dependency-injection-in-maui/</link><pubDate>Wed, 27 Oct 2021 10:31:05 +0000</pubDate><author>作者</author><guid>https://zhangchi.io/posts/dependency-injection-in-maui/</guid><description>依赖关系注入(DI)是 .NET 中的一等公民，如果熟悉 .NET 开发，对依赖注入则不会陌生。依赖关系注入是一种在类及其依赖关系之间实现控制反转(IoC)的技</description></item><item><title>Abp太重了？轻量化Abp框架</title><link>https://zhangchi.io/posts/lightweightabp/</link><pubDate>Fri, 23 Jul 2021 09:48:24 +0800</pubDate><author>作者</author><guid>https://zhangchi.io/posts/lightweightabp/</guid><description>在进行框架的选型时，经常会听到“***框架太重了”之类的声音，比如“Abp太重了，不适合我们&amp;hellip;”。事实上，Abp框架真的很重吗</description></item></channel></rss>